import ro.isdc.wro.model.resource.*
import ro.isdc.wro.extensions.processor.js.*
 
buildscript { 
  repositories {  mavenCentral() }
  dependencies { 
    classpath "ro.isdc.wro4j:wro4j-extensions:1.4.6"
    classpath "ro.isdc.wro4j:wro4j-core:1.4.6"
  }
}
 
class CompileCoffeeScript extends DefaultTask { 
  def srcDir = "src/main/coffeescript"
 
  def outputDir = "client/js"
 
  @InputDirectory
  File getSrcDir() {  project.file(srcDir) }
 
  @OutputDirectory
  File getOutputDir() {  project.file(outputDir) }
 
  @TaskAction
  void doCompile() { 
    logger.info "Compiling CoffeeScript sources from $srcDir into $outputDir"
 
    def outputDirFile = getOutputDir()
    // Recursively delete output directory if it exists
    outputDirFile.deleteDir()
 
    def tree = project.fileTree srcDir, { 
      include '**/*.coffee'
    }
 
    tree.visit { visit ->
      if (visit.directory) return
 
      def inputFile = visit.file
      def inputPath = visit.path
      def outputPath = inputPath.replaceAll(/\.coffee$/, '.js')
      def outputFile = new File(outputDirFile, outputPath)
 
 
      outputFile.parentFile.mkdirs()
 
      logger.info "Compiling ${inputFile} to ${outputFile}"


      def resource = Resource.create(inputFile.absolutePath, ResourceType.JS)
      
      logger.info "${new CoffeeScriptProcessor()}, ${resource}, ${inputFile.newReader()}, ${outputFile.newWriter()}"
      
      new CoffeeScriptProcessor().process(resource, inputFile.newReader(), outputFile.newWriter())
    }
  }
 
}
 
project.ext.CompileCoffeeScript = CompileCoffeeScript
